{"version":3,"file":"Image.js","sources":["../../src/image/Image.tsx"],"sourcesContent":["import NextImage, {ImageProps as NextImageProps} from 'next/image'\n\nimport {imageLoader} from './imageLoader'\n\n/**\n * @alpha\n */\nexport interface ImageProps extends Omit<NextImageProps, 'loader' | 'src'> {\n  /**\n   * The `loader` prop is not supported on `Image` components. Use `next/image` directly to use a custom loader.\n   */\n  loader?: never\n  /**\n   * Must be a string that is a valid URL to an image on the Sanity Image CDN.\n   */\n  src: string\n}\n\n/**\n * @alpha\n */\nexport function Image(props: ImageProps): JSX.Element {\n  const {loader, src, ...rest} = props\n  if (loader) {\n    throw new TypeError(\n      'The `loader` prop is not supported on `Image` components. Use `next/image` directly to use a custom loader.',\n    )\n  }\n  let srcUrl: URL\n  try {\n    srcUrl = new URL(src)\n    if (props.height) {\n      srcUrl.searchParams.set('h', `${props.height}`)\n    }\n    if (props.width) {\n      srcUrl.searchParams.set('w', `${props.width}`)\n    }\n  } catch (err) {\n    throw new TypeError(\n      'The `src` prop must be a valid URL to an image on the Sanity Image CDN.',\n      {cause: err},\n    )\n  }\n  return <NextImage {...rest} src={srcUrl.toString()} loader={imageLoader} />\n}\n"],"names":["Image","props","loader","src","rest","TypeError","srcUrl","URL","height","searchParams","set","width","err","cause","jsx","NextImage","toString","imageLoader"],"mappings":"iHAqBO,SAASA,EAAMC,GACpB,MAAMC,OAACA,EAAAC,IAAQA,KAAQC,GAAQH,EAC3B,GAAAC,EACF,MAAM,IAAIG,UACR,+GAGA,IAAAC,EACA,IACOA,EAAA,IAAIC,IAAIJ,GACbF,EAAMO,QACRF,EAAOG,aAAaC,IAAI,IAAK,GAAGT,EAAMO,UAEpCP,EAAMU,OACRL,EAAOG,aAAaC,IAAI,IAAK,GAAGT,EAAMU,eAEjCC,GACP,MAAM,IAAIP,UACR,0EACA,CAACQ,MAAOD,GAEZ,CACO,OAAAE,EAACC,MAAcX,EAAMD,IAAKG,EAAOU,WAAYd,OAAQe,GAC9D"}