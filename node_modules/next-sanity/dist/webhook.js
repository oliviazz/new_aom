import{isValidSignature as e,SIGNATURE_HEADER_NAME as r}from"@sanity/webhook";const n={api:{bodyParser:!1},runtime:"nodejs"};async function t(n,t,i=!0){return"text"in n?async function(n,t,i=!0){const a=n.headers.get(r);if(!a)return console.error("Missing signature header"),{body:null,isValidSignature:null};const o=await n.text(),s=t?await e(o,a,t.trim()):null;return!1!==s&&i&&await new Promise((e=>setTimeout(e,3e3))),{body:o.trim()?JSON.parse(o):null,isValidSignature:s}}(n,t,i):async function(n,t,i=!0){let a=n.headers[r];if(Array.isArray(a)&&(a=a[0]),!a)return console.error("Missing signature header"),{body:null,isValidSignature:null};if(n.readableEnded)throw new Error("Request already ended and the POST body can't be read. Have you setup `export {config} from 'next-sanity/webhook' in your webhook API handler?`");const o=await async function(e){const r=[];for await(const n of e)r.push("string"==typeof n?Buffer.from(n):n);return Buffer.concat(r).toString("utf8")}(n),s=t?await e(o,a,t.trim()):null;return!1!==s&&i&&await new Promise((e=>setTimeout(e,1e3))),{body:o.trim()?JSON.parse(o):null,isValidSignature:s}}(n,t,i)}export{n as config,t as parseBody};//# sourceMappingURL=webhook.js.map
