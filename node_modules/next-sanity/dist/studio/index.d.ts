/// <reference types="react" />

import {JSX as JSX_2} from 'react'
import {MemoExoticComponent} from 'react'
import {StudioProps} from 'sanity'

/**
 * In router segments (`/app/studio/[[...index]]/page.tsx`):
 * ```tsx
 * // If you don't want to change any defaults you can just re-export the metadata directly:
 * export {metadata} from 'next-sanity/studio'
 *
 * // To customize the metadata, spread it on the export:
 * import {metadata as studioMetadata} from 'next-sanity/studio'
 * import type { Metadata } from 'next'
 *
 * export const metadata: Metadata = {
 *   ...studioMetadata,
 *   // Set another title
 *   title: 'My Studio',
 * })
 * ```
 * @public
 */
export declare const metadata: {
  referrer: 'same-origin'
  robots: 'noindex'
}

/**
 * Override how the Studio renders by passing children.
 * This is useful for advanced use cases where you're using StudioProvider and StudioLayout instead of Studio:
 * ```
 * import {StudioProvider, StudioLayout} from 'sanity'
 * import {NextStudio} from 'next-sanity/studio'
 * <NextStudio config={config}>
 *   <StudioProvider config={config}>
 *     <CustomComponentThatUsesContextFromStudioProvider />
 *     <StudioLayout />
 *   </StudioProvider>
 * </NextStudio>
 * ```
 * @public
 */
export declare const NextStudio: MemoExoticComponent<
  ({children, config, unstable__noScript, scheme, ...props}: NextStudioProps) => JSX_2.Element
>

/** @public */
export declare const NextStudioLayout: MemoExoticComponent<
  ({children}: NextStudioLayoutProps) => JSX_2.Element
>

/** @public */
export declare interface NextStudioLayoutProps {
  children: React.ReactNode
}

/** @internal */
export declare const NextStudioNoScript: () => JSX.Element

/** @public */
export declare interface NextStudioProps extends StudioProps {
  children?: React.ReactNode
  /**
   * Render the <noscript> tag
   * @defaultValue true
   * @alpha
   */
  unstable__noScript?: boolean
}

/**
 * In router segments (`/app/studio/[[...index]]/page.tsx`):
 * ```tsx
 * // If you don't want to change any defaults you can just re-export the viewport config directly:
 * export {viewport} from 'next-sanity/studio'
 *
 * // To customize the viewport config, spread it on the export:
 * import {viewport as studioViewport} from 'next-sanity/studio'
 * import type { Viewport } from 'next'
 *
 * export const viewport: Viewport = {
 *   ...studioViewport,
 *   // Overrides the viewport to resize behavior
 *   interactiveWidget: 'resizes-content'
 * })
 * ```
 * @public
 */
export declare const viewport: {
  width: string
  initialScale: number
  viewportFit: 'cover'
}

export {}
