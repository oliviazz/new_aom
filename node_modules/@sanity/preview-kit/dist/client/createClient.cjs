"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("@sanity/client");function r(){try{return"true"===(void 0).SANITY_SOURCE_MAP}catch{}try{return"true"===process.env.SANITY_SOURCE_MAP}catch{}return!1}function t(){try{return(void 0).SANITY_STUDIO_URL}catch{}try{return process.env.SANITY_STUDIO_URL}catch{}}exports.createClient=n=>{var o,a;const{encodeSourceMap:c=r(),encodeSourceMapAtPath:i,studioUrl:l=t(),logger:u,...s}=n;let d=!0===c;if("auto"===c&&(d=function(){try{return"preview"===(void 0).VERCEL_ENV}catch{}try{return"preview"===process.env.VERCEL_ENV}catch{}return!1}()),"string"==typeof c&&"auto"!==c)throw new Error(`Invalid value for encodeSourceMap: ${c}. Did you mean 'auto'?`);try{if(d&&!1!==n.resultSourceMap)return l?(null==(a=null==u?void 0:u.debug)||a.call(u,"[@sanity/preview-kit]: Creating source map enabled client"),e.createClient({...s,resultSourceMap:n.resultSourceMap?n.resultSourceMap:"withKeyArraySelector",stega:{enabled:!0,studioUrl:l,logger:u,filter:i?e=>i({path:e.sourcePath,filterDefault:()=>e.filterDefault(e)}):void 0}})):(null==(o=null==u?void 0:u.error)||o.call(u,"[@sanity/preview-kit]: Content source map enabled client is enabled, but no studioUrl is provided. Falling back to @sanity/client"),e.createClient(s))}catch(e){console.error("[@sanity/preview-kit]: Error creating client",e,"falling back to non-embedded sourcemap mode")}return e.createClient(s)};//# sourceMappingURL=createClient.cjs.map
