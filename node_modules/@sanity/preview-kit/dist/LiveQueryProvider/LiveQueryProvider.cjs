"use strict";var e=require("react/jsx-runtime"),t=require("@sanity/client/csm"),r=require("@sanity/preview-kit-compat"),s=require("@vercel/stega"),n=require("lru-cache"),o=require("mendoza"),c=require("react"),i=require("../context.cjs");const a=new n.LRUCache({max:500}),u=c.memo((function(t){const{children:r,refreshInterval:s=1e4,token:n}=t;if(!t.client)throw new Error("Missing a `client` prop with a configured Sanity client instance");const[o]=c.useState((()=>{const{requestTagPrefix:e,resultSourceMap:r}=t.client.config();return t.client.withConfig({requestTagPrefix:e||"sanity.preview-kit",resultSourceMap:"withKeyArraySelector"!==r||"withKeyArraySelector",...n&&{token:n,useCdn:!1,perspective:"previewDrafts",ignoreBrowserTokenWarning:!0}})})),[a]=c.useState((()=>t.logger));c.useEffect((()=>{a&&a.log(`[@sanity/preview-kit]: With the current configuration you can expect that: Updates that can be traced using Content Source Maps will be applied in real-time. Other updates will be applied every ${s}ms.`)}),[a,s]);const[u,f]=c.useState([]),[p]=c.useState((()=>new Map)),h=function(e){const[t]=c.useState((()=>new Map)),r=c.useCallback(((r,s,n,o)=>{t.has(r)||(t.set(r,{query:s,params:n,listeners:new Set}),c.startTransition((()=>e((e=>e.includes(r)?e:[...e,r])))));const i=t.get(r);if(!i||!i.listeners)throw new TypeError("Inconsistent cache for key: "+r);const{listeners:a}=i;return a.add(o),()=>{a.delete(o),0===a.size&&(t.delete(r),c.startTransition((()=>e((e=>e.includes(r)?e.filter((e=>e!==r)):e)))))}}),[t,e]);return c.useMemo((()=>({cache:t,subscribe:r})),[t,r])}(f),[m]=c.useState((()=>function(e,t,r){const s=g(t,r);return p.has(s)||p.set(s,{result:e,resultSourceMap:{}}),{subscribe:e=>{const n=h.subscribe(s,t,r,e);return()=>n()},getSnapshot:()=>{var e;return null==(e=p.get(s))?void 0:e.result}}})),[S,y]=c.useState([]),[v]=c.useState((()=>new Map)),w=c.useCallback((e=>{var t;const r=new Set;if(v.clear(),null!=(t=e.documents)&&t.length)for(const t of e.documents)r.add(t._id),v.set(t._id,t);c.startTransition((()=>y((e=>{const t=Array.from(new Set([...e,...r]));return JSON.stringify(t.sort())===JSON.stringify(e.sort())?e:t}))))}),[v]);return e.jsxs(i.defineStoreContext.Provider,{value:m,children:[r,e.jsx(d,{cache:h.cache,client:o,setTurboIds:y,snapshots:p,turboIds:S,docsInUse:v}),u.map((t=>{if(!h.cache.has(t))return null;const{query:r,params:n,listeners:c}=h.cache.get(t);return e.jsx(l,{client:o,listeners:c,params:n,query:r,refreshInterval:s,snapshots:p,turboIdsFromSourceMap:w},t)}))]})}));u.displayName="LiveStoreProvider";const l=c.memo((function(e){const{client:t,refreshInterval:s,query:n,params:o,listeners:i,snapshots:a,turboIdsFromSourceMap:u}=e,{projectId:l,dataset:f}=c.useMemo((()=>{const{projectId:e,dataset:r}=t.config();return{projectId:e,dataset:r}}),[t]),[d,p]=c.useState(null);if(d)throw d;const[h,S]=r.useRevalidate({refreshInterval:s}),y="refresh"===h||"inflight"===h;return c.useEffect((()=>{if(!y)return;let e=!1;const r=new AbortController;const s=S();return async function(){const{signal:s}=r,{result:c,resultSourceMap:d}=await t.fetch(n,o,{signal:s,filterResponse:!1});if(!s.aborted){a.set(g(n,o),{result:m(l,f,c,d),resultSourceMap:null!=d?d:{}}),d&&u(d);for(const e of i.values())e();e=!0}}().catch((e=>{"AbortError"!==e.name&&p(e)})).finally(s),()=>{e||r.abort()}}),[t,f,i,o,l,n,y,a,S,u]),null}));function f(e,t,r){return`${e}-${t}-${r}`}l.displayName="QuerySubscription";const d=c.memo((function(t){const{client:s,snapshots:n,cache:i,turboIds:u,setTurboIds:l,docsInUse:d}=t,{projectId:h,dataset:S}=c.useMemo((()=>{const{projectId:e,dataset:t}=s.config();return{projectId:e,dataset:t}}),[s]);c.useEffect((()=>{var e,t;const r=new Set;d.clear();for(const{query:s,params:o}of i.values()){const c=g(s,o),i=n.get(c);if(i&&null!=(t=null==(e=i.resultSourceMap)?void 0:e.documents)&&t.length)for(const e of i.resultSourceMap.documents)r.add(e._id),d.set(e._id,e)}const s=[...r].sort();JSON.stringify(u)!==JSON.stringify(s)&&c.startTransition((()=>l(s)))}),[i,l,n,u,d]),r.useDocumentsInUse(d,h,S);const[y,v]=c.useState([]);c.useEffect((()=>{const e=new Set(y.flat()),t=new Set;for(const r of u)!e.has(r)&&!a.has(f(h,S,r))&&t.add(r);const r=[...t].slice(0,100);0!==r.length&&c.startTransition((()=>v((e=>[...e.slice(-100),r]))))}),[y,S,h,u]);const[w,b]=c.useState();return c.useEffect((()=>{const e=s.listen("*",{},{events:["mutation"],effectFormat:"mendoza",includePreviousRevision:!1,includeResult:!1,tag:"turbo"}).subscribe((e=>{var t,r;if("mutation"!==e.type||null==(r=null==(t=e.effects)?void 0:t.apply)||!r.length)return;const s=f(h,S,e.documentId),n=a.peek(s);if(n){const t={...n};delete t._rev;const r=o.applyPatch(t,e.effects.apply);a.set(s,r)}c.startTransition((()=>b(e.documentId)))}));return()=>e.unsubscribe()}),[s,S,h]),c.useEffect((()=>{var e,t,r;if(!w||!u.includes(w))return;const s=[];for(const[r,o]of n.entries())null!=(t=null==(e=o.resultSourceMap)?void 0:e.documents)&&t.length&&(o.result=m(h,S,o.result,o.resultSourceMap),s.push(r));for(const e of s){const t=null==(r=i.get(e))?void 0:r.listeners;if(t)for(const e of t)e()}c.startTransition((()=>b(void 0)))}),[i,S,w,h,n,u]),e.jsx(e.Fragment,{children:y.map((t=>e.jsx(p,{client:s,projectId:h,dataset:S,ids:t},JSON.stringify(t))))})}));d.displayName="Turbo";const p=c.memo((function(e){const{client:t,projectId:r,dataset:s,ids:n}=e;return c.useEffect((()=>{const e=n.filter((e=>!a.has(f(r,s,e))));0!==e.length&&t.getDocuments(e).then((e=>{for(const t of e)t&&null!=t&&t._id&&a.set(f(r,s,t._id),t)}),console.error)}),[t,s,n,r]),null}));p.displayName="GetDocuments";let h=!1;function m(e,r,n,o){return o?t.applySourceDocuments(n,o,(t=>{if(!t._projectId)return a.get(f(e,r,t._id));h||(console.warn("Cross dataset references are not supported yet, ignoring source document",t),h=!0)}),((e,{previousValue:t})=>{if("string"==typeof e&&"string"==typeof t){const{encoded:r}=s.vercelStegaSplit(t),{cleaned:n}=s.vercelStegaSplit(e);return`${r}${n}`}return e}),"previewDrafts"):n}function g(e,t){return`${e}-${JSON.stringify(t)}`}module.exports=u;//# sourceMappingURL=LiveQueryProvider.cjs.map
