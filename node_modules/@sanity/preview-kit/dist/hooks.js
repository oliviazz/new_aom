import{useQueryParams as t}from"@sanity/preview-kit-compat";import{useContext as n,useMemo as i,useState as r,useCallback as e}from"react";import o from"react-fast-compare";import{useSyncExternalStoreWithSelector as a}from"use-sync-external-store/with-selector.js";import{defineStoreContext as s}from"./context.js";function l(l,u,c,p){const{isEqual:h=o}=p||{},d=n(s),f=t(c),m=i((()=>({subscribe:()=>()=>{},getSnapshot:()=>l})),[l]),b=i((()=>(null==d?void 0:d(l,u,f))||{subscribe:()=>()=>{},getSnapshot:()=>l}),[d,l,f,u]),[S]=r((()=>{if(void 0===l)throw new Error("initialSnapshot can't be undefined, if you don't want an initial value use null instead");try{return JSON.parse(JSON.stringify(l))}catch(t){return console.warn("Failed to deep clone initialSnapshot, this is likely an error and an indication that the snapshot isn't JSON serializable",{initialSnapshot:l,error:t}),l}})),v=e((()=>S),[S]),w=e((t=>t),[]),y=a((null==b?void 0:b.subscribe)||m.subscribe,(null==b?void 0:b.getSnapshot)||m.getSnapshot,v,w,h),g=null!==d;return[y,g&&S===y,g]}function u(){return null!==n(s)}export{u as useIsEnabled,l as useLiveQuery};//# sourceMappingURL=hooks.js.map
