"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("@sanity/preview-kit-compat"),t=require("react"),n=require("react-fast-compare"),r=require("use-sync-external-store/with-selector.js"),i=require("./context.cjs");function s(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var a=s(n);exports.useIsEnabled=function(){return null!==t.useContext(i.defineStoreContext)},exports.useLiveQuery=function(n,s,o,u){const{isEqual:l=a.default}=u||{},c=t.useContext(i.defineStoreContext),d=e.useQueryParams(o),p=t.useMemo((()=>({subscribe:()=>()=>{},getSnapshot:()=>n})),[n]),S=t.useMemo((()=>(null==c?void 0:c(n,s,d))||{subscribe:()=>()=>{},getSnapshot:()=>n}),[c,n,d,s]),[b]=t.useState((()=>{if(void 0===n)throw new Error("initialSnapshot can't be undefined, if you don't want an initial value use null instead");try{return JSON.parse(JSON.stringify(n))}catch(e){return console.warn("Failed to deep clone initialSnapshot, this is likely an error and an indication that the snapshot isn't JSON serializable",{initialSnapshot:n,error:e}),n}})),f=t.useCallback((()=>b),[b]),h=t.useCallback((e=>e),[]),y=r.useSyncExternalStoreWithSelector((null==S?void 0:S.subscribe)||p.subscribe,(null==S?void 0:S.getSnapshot)||p.getSnapshot,f,h,l),v=null!==c;return[y,v&&b===y,v]};//# sourceMappingURL=hooks.cjs.map
